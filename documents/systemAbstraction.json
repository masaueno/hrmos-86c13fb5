{
  "key": "systemAbstraction",
  "value": {
    "designRules": "1. カラーパレット：\n   - メインカラー：#4A90E2（青）\n   - アクセントカラー：#F5A623（オレンジ）\n   - 背景色：#F8F8F8（薄いグレー）\n   - テキスト色：#333333（濃いグレー）\n   - エラー色：#D0021B（赤）\n\n2. タイポグラフィ：\n   - メインフォント：Noto Sans JP\n   - 見出し：サイズ 24px 太字\n   - 本文：サイズ 16px 標準\n\n3. レイアウト：\n   - レスポンシブデザインを採用し スマートフォンやタブレットにも対応\n   - グリッドシステムを使用し 整列されたレイアウトを実現\n\n4. アイコン：\n   - Material Designアイコンを使用し 統一感のあるデザインを実現\n\n5. ボタン：\n   - 角丸デザイン（border-radius: 4px）\n   - ホバー時に軽い拡大効果（transform: scale(1.05)）\n\n6. フォーム：\n   - 入力フィールドは十分な余白を確保（padding: 12px）\n   - プレースホルダーテキストで入力内容をガイド\n\n7. データ表示：\n   - テーブルは交互に背景色を変え 可読性を向上（zebra-striping）\n   - グラフやチャートはシンプルで見やすいデザインを採用\n\n8. アニメーション：\n   - 過度な動きは避け 必要最小限のアニメーションを使用\n   - トランジション効果はなめらかに（transition: 0.3s ease-in-out）\n\n9. アクセシビリティ：\n   - コントラスト比を考慮し 文字の読みやすさを確保\n   - フォーカス可能な要素には明確なフォーカス表示を実装",
    "codingRules": "1. 命名規則：\n   - クラス名：パスカルケース（例：EmployeeManager）\n   - メソッド名：キャメルケース（例：calculateOvertime）\n   - 変数名：キャメルケース（例：totalWorkHours）\n   - 定数：大文字のスネークケース（例：MAX_WORK_HOURS）\n\n2. インデント：\n   - スペース4つを使用\n   - ネストが深くなりすぎないよう注意（最大3階層まで）\n\n3. コードの可読性：\n   - 関数は単一責任の原則に従い 1つの機能のみを担当\n   - コメントを適切に追加し 複雑なロジックには説明を付ける\n   - 長すぎる行は適切に改行（80文字を目安）\n\n4. エラーハンドリング：\n   - 例外処理を適切に実装\n   - ログ出力を活用し エラーの追跡を容易に\n   - ユーザーフレンドリーなエラーメッセージを表示\n\n5. セキュリティ：\n   - SQL injectionやXSS攻撃を防ぐため 入力値のバリデーションを徹底\n   - パスワードなどの機密情報は適切に暗号化\n\n6. パフォーマンス：\n   - 不要なループや条件分岐を避け 効率的なアルゴリズムを使用\n   - データベースアクセスを最適化\n\n7. テスト：\n   - ユニットテストを作成し 各機能の動作を確認\n   - 自動テストを導入し 継続的な品質管理を実現",
    "systemAbstraction": "本システムは クラウド型の総合的な勤怠管理システムです。主な特徴は以下の通りです：\n\n1. 多様な打刻方法：ブラウザ スマホアプリ ICカード QRコードなど 様々な方法で勤怠打刻が可能\n\n2. リアルタイム管理：従業員の出勤状況や残業状況をリアルタイムで確認可能\n\n3. 柔軟な休暇管理：多様な休暇種類に対応し 申請から承認までのワークフローを電子化\n\n4. 高度なシフト管理：複数拠点対応や希望シフト申請機能を含む\n\n5. カスタマイズ性：企業独自の就業規則に合わせた細かな設定が可能\n\n6. データ分析・レポート機能：勤怠データの集計・分析 各種レポートの作成が可能\n\n7. 他システム連携：給与計算システムや入退室管理システムとの連携機能\n\nこのシステムにより 効率的な勤怠管理と労務コンプライアンスの向上が期待できます。"
  }
}
